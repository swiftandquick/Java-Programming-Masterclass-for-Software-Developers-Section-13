<!-- Set BorderPane's ID to mainBorderPane.  -->
<?import javafx.scene.control.*?>
<?import javafx.scene.image.Image?>
<?import javafx.scene.image.ImageView?>
<?import javafx.scene.layout.*?>
<?import javafx.scene.text.Font?>
<BorderPane fx:id="mainBorderPane" fx:controller="com.cheny16.todolist.Controller"
            xmlns:fx="http://javafx.com/fxml">
    <top>
        <VBox>
            <!-- Create a menu bar.  -->
            <MenuBar>
                <!-- The menu "File" contains the options "New..." and "Exit", with a separator between them.  -->
                <Menu text="File">
                    <items>
                        <!-- Clicking on the New... button will invoke the showNewItemDialog() method in Controller
                        class.  -->
                        <MenuItem text="New..." onAction="#showNewItemDialog"/>
                        <SeparatorMenuItem/>
                        <!-- Clicking on Exit button will invoke the handleExit() method.  -->
                        <MenuItem text="Exit" onAction="#handleExit"/>
                    </items>
                </Menu>
            </MenuBar>
            <ToolBar>
                <HBox>
                    <!-- Clicking on this button will also invoke the showNewItemDialog() method.  -->
                    <Button text="New..."  onAction="#showNewItemDialog">
                        <tooltip>
                            <Tooltip text="Add a new todo item.  "/>
                        </tooltip>
                        <graphic>
                            <ImageView>
                                <Image url="@/toolbarButtonGraphics/general/New24.gif"/>
                            </ImageView>
                        </graphic>
                    </Button>
                    <!-- Method handleFilterButton() will be called if the toggle button with ID filterToggleButton is
                    toggled.  -->
                    <ToggleButton fx:id="filterToggleButton" text="Today's Items" onAction="#handleFilterButton">
                        <tooltip>
                            <Tooltip text="Button Down:  Show Today's items only.  Button Up:  Show all items.  "/>
                        </tooltip>
                    </ToggleButton>
                </HBox>
            </ToolBar>
        </VBox>
    </top>
    <left>
        <!-- Control enables users to choose one or more options from a predefined list of choices.  Give the ListView
        an ID:  todoListView.  When key is pressed on todoListView element, the method handleKeyPressed() is invoked.  -->
        <ListView fx:id="todoListView" onKeyPressed="#handleKeyPressed">
        </ListView>
    </left>
    <center>
        <!-- Set background color to white.  -->
        <VBox style="-fx-background-color:white">
            <!-- Display with the preferred height.  Tell the VBox to keep as much room as possible to the text area,
             the VBox will size all its other children to their preferred heights, and give the remaining space to
             the text area.  o	Makes the text area be able to wrap the text, so if there isnâ€™t enough space, the text
             will skip to the next line.  -->
            <TextArea fx:id="itemDetailsTextArea" VBox.vgrow="ALWAYS" wrapText="true"/>
            <HBox>
                <Label text="Due:  " style="-fx-background-color:white">
                    <font>
                        <Font name="Times New Roman bold" size="20"/>
                    </font>
                </Label>
                <Label fx:id="deadlineLabel" style="-fx-background-color:white">
                    <font>
                        <Font name="Times New Roma bold" size="20"/>
                    </font>
                </Label>
            </HBox>
        </VBox>
    </center>
</BorderPane>